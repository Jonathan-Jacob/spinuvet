<%= render Spina::UserInterface::HeaderComponent.new do |header| %>
  <% header.actions do %>
    <div class="flex gap-3 flex-wrap">

      <div class="relative w-auto" data-controller="reveal" data-reveal-away-value>
        <button type="button" class="btn btn-default px-3 w-full" data-action="reveal#toggle">
          <svg class="w-5 h-5 text-gray-600" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
            <path d="M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z" />
          </svg>
        </button>

        <div hidden data-reveal data-transition class="origin-top-left lg:origin-top-right absolute lg:right-0 mt-2 w-56 rounded-md shadow-lg border border-gray-200">
          <div class="rounded-md bg-white shadow-xs">
            <div class="py-1">

              <%= button_to t('spina.ingredients.delete'), spina.admin_ingredient_path(@ingredient), method: :delete, class: "block w-full text-left px-4 py-2 text-sm leading-5 font-medium text-red-500 cursor-pointer bg-white hover:bg-red-100 hover:bg-opacity-50 hover:text-red-500 focus:outline-none focus:bg-gray-100 focus:text-gray-900", form: {data: {controller: "confirm", delete_button: t('spina.delete'), cancel_button: t('spina.cancel'), confirm_message: t('spina.ingredients.delete_confirmation', subject: @ingredient.ingredient_name(@locale))}} %>

              <% unless Spina::IngredientDraft.where(ingredient_id: @ingredient.id).empty? %>
                <%= link_to t('spina.ingredients.old_version') + "...", spina.edit_draft_admin_ingredient_path(@ingredient), class: "block px-4 py-2 text-sm font-medium leading-5 text-gray-700 hover:bg-gray-100 hover:text-gray-900 focus:outline-none focus:bg-gray-100 focus:text-gray-900", data: {turbo_frame: "modal", action: "reveal#hide"} %>
              <% else %>
                <span class="block px-4 py-2 text-sm leading-5 text-gray-400"><%= t('spina.pages.no_old_version_available') %></span>
              <% end %>
            </div>
          </div>
        </div>
      </div>
      <%= button_tag type: :submit, form: @ingredient.object_id, class: 'btn btn-primary self-start z-10', data: {controller: "button", action: "button#loading", loading_message: t('spina.ui.saving')} do %>
        <%= heroicon('check', style: :mini, class: 'w-5 h-5 -ml-1 mr-1') %>
        <%=t 'spina.ingredients.save' %>
      <% end %>
    </div>
  <% end %>
<% end %>
<div class="px-8">
  <%= form_with model: @ingredient, url: spina.admin_ingredient_path(@ingredient), id: @ingredient.object_id do |f| %>
    <% locales = ([@locale] + Spina.locales.reject{|l| l.to_s.downcase == @locale.to_s.downcase}) %>
    <% locales.each do |locale| %>
      <h2 class="<%= locales.first == locale ? "lg:-pt-12" : "pt-6" %> pb-4 block leading-5 font-medium text-gray-700"><%= t("spina.languages.#{locale}") %></h2>
      <div>
        <label class="block text-sm leading-5 font-medium text-gray-700"><%= t('spina.ingredients.name') %></label>
        <div class="mt-1">
          <%= f.text_field "#{locale}_name".to_sym, class: "form-input ll max-w-5xl sm:text-sm sm:leading-5", value: @ingredient.json_attributes["#{locale}_content"].present? ? @ingredient.json_attributes["#{locale}_content"]["name"] : "" %>
        </div>
      </div>
      <div class="my-6" data-controller="unique-id" data-unique-id="<%= f.object.object_id %>">
        <label class="block text-sm leading-5 font-medium text-gray-700"><%= t('spina.ingredients.description') %></label>
        <div class="mt-1 relative">
          <% if @ingredient.json_attributes["#{locale}_content"].present? %>
            <%= f.hidden_field "#{locale}_description".to_sym, value: @ingredient.json_attributes["#{locale}_content"]["description"], id: "#{f.object.object_id}_input" %>
          <% else %>
            <%= f.hidden_field "#{locale}_description".to_sym, id: "#{f.object.object_id}_input" %>
          <% end %>
          <div class="relative form-textarea p-4 pt-0 shadow-sm max-w-5xl" data-controller="trix" id="<%= "insert_#{f.object.object_id}_trix-toolbar" %>" data-action="media-picker:done->trix#insertAttachment">
            <div class="absolute inset-0 bg-white flex justify-center items-center rounded-md z-20 transition-opacity" data-trix-target="load"></div>
            <%= render Spina::Forms::TrixToolbarComponent.new("#{f.object.object_id}_trix-toolbar") %>

            <trix-editor class="min-h-4 prose prose-sm focus:outline-none max-w-3xl xl:border-r border-dashed border-gray-200 pr-3" toolbar="<%= f.object.object_id %>_trix-toolbar" input="<%= f.object.object_id %>_input" data-trix-target="editor" data-action="trix-file-accept->trix#preventDefault"></trix-editor>
          </div>
        </div>
      </div>
      <% unless locales.last == locale %>
        <hr>
      <% end %>
    <% end %>
  <% end %>
</div>
